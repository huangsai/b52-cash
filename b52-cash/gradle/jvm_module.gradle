apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly dep.injectAnnotation
    compileOnly dep.jetAnnotation
    compileOnly dep.javaxAnnotation
    compileOnly dep.findBugsJrs305

    testImplementation dep.kotlin.test
    testImplementation dep.kotlin.testJunit
    testImplementation dep.junit
    testImplementation dep.mockito
    testImplementation dep.truth

    compileOnly dep.kotlin.stdlibJdk8
    compileOnly dep.kotlin.reflect
    compileOnly dep.ktSerialization
    compileOnly dep.ktCoroutines.core
    compileOnly dep.ktCoroutines.rxJava

    compileOnly dep.okHttp.okHttp
    compileOnly dep.okHttp.loggingInterceptor
    compileOnly dep.okio
    compileOnly dep.retrofit.retrofit
    compileOnly dep.retrofit.rxJavaAdapter
    compileOnly dep.retrofit.moshiConverter
    compileOnly dep.moshi.moshi
    compileOnly dep.moshi.kotlin
    kapt dep.moshi.codegen

    compileOnly dep.rxJava.rxJava
    compileOnly dep.rxJava.stream

    compileOnly dep.autoValue.autoValue
    kapt dep.autoValue.compiler
    compileOnly dep.dagger.dagger
    kapt dep.dagger.compiler

    compileOnly dep.androidX.annotation.annotation
    compileOnly dep.androidX.collection.collection
    compileOnly dep.androidX.collection.ktx
    compileOnly dep.androidX.room.common
    compileOnly dep.androidX.room.migration
    compileOnly dep.androidX.paging.common
    compileOnly dep.androidX.paging.commonKtx

    compileOnly dep.store
}

apply plugin: 'com.vanniktech.maven.publish'
mavenPublish {
    releaseSigningEnabled = false
    targets {
        uploadArchives {
            releaseRepositoryUrl = RELEASE_REPOSITORY_URL
            snapshotRepositoryUrl = SNAPSHOT_REPOSITORY_URL
            repositoryUsername = SONATYPE_NEXUS_USERNAME
            repositoryPassword = SONATYPE_NEXUS_PASSWORD
        }

        installArchives {
            releaseRepositoryUrl = file("${rootProject.buildDir}/localMaven").toURI().toString()
            snapshotRepositoryUrl = file("${rootProject.buildDir}/localMaven").toURI().toString()
        }
    }
}